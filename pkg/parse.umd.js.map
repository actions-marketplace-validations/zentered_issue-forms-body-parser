{"version":3,"file":"parse.umd.js","sources":["../src/parsers/date.js","../src/parsers/time.js","../src/parsers/index.js","../src/parsers/list.js","../src/parse.js","../src/parsers/duration.js"],"sourcesContent":["'use strict'\n\nimport { parse, isMatch } from 'date-fns'\nimport { zonedTimeToUtc } from 'date-fns-tz'\n\nconst loc = 'UTC'\nconst commonDateFormats = [\n  'yyyy-MM-dd',\n  'dd/MM/yyyy',\n  'dd/MM/yy',\n  'dd-MM-yyyy',\n  'dd-MM-yy',\n  'dd.MM.yyyy',\n  'dd.MM.yy'\n]\n\nexport default function parseDate(text) {\n  const match = commonDateFormats.map((format) => {\n    return isMatch(text, format)\n  })\n  if (match.indexOf(true) > -1) {\n    const date = zonedTimeToUtc(\n      parse(text, commonDateFormats[match.indexOf(true)], new Date()),\n      loc\n    ).toJSON()\n    return date.split('T')[0]\n  } else {\n    return null\n  }\n}\n","'use strict'\n\nimport { parse, isMatch } from 'date-fns'\nimport { zonedTimeToUtc, formatInTimeZone } from 'date-fns-tz'\n\nconst loc = 'UTC'\nconst commonTimeFormats = [\n  'HH:mm',\n  'HH.mm',\n  'hh:mm aaa',\n  'hh:mm a..aa',\n  'hh:mm aaaa'\n]\n\nexport default function parseTime(text) {\n  const match = commonTimeFormats.map((format) => {\n    return isMatch(text, format)\n  })\n  if (match.indexOf(true) > -1) {\n    const time = zonedTimeToUtc(\n      parse(text, commonTimeFormats[match.indexOf(true)], new Date()),\n      loc\n    )\n    return formatInTimeZone(time, loc, 'HH:mm')\n  } else {\n    return null\n  }\n}\n","'use strict'\n\nimport date from './date.js'\nimport time from './time.js'\nimport duration from './duration.js'\nimport list from './list.js'\n\nexport const parseDate = date\nexport const parseTime = time\nexport const parseDuration = duration\nexport const parseList = list\n","'use strict'\n\nexport default function parseList(list) {\n  return list.children\n    .map((item) => {\n      const listItem = {}\n      if (item.type === 'list') {\n        return parseList(list)\n      } else if (item.type === 'listItem') {\n        listItem.checked = item.checked\n        return item.children\n          .map((child) => {\n            if (child.type === 'paragraph') {\n              listItem.text = child.children\n                .map((c) => {\n                  if (c.type === 'link') {\n                    listItem.link = c.url\n                    return `[${c.children[0].value}](${c.url})`\n                  } else {\n                    return c.value\n                  }\n                })\n                .filter((x) => !!x)\n                .join('')\n              return listItem\n            }\n          })\n          .filter((x) => !!x)\n      }\n    })\n    .filter((x) => !!x)\n}\n","'use strict'\n\nimport { unified } from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkGfm from 'remark-gfm'\nimport slugify from '@sindresorhus/slugify'\nimport remarkStringify from 'remark-stringify'\nimport stripFinalNewline from 'strip-final-newline'\n\nimport {\n  parseDate,\n  parseTime,\n  parseDuration,\n  parseList\n} from './parsers/index.js'\n\nexport default async function parseMD(body) {\n  const tokens = await unified().use(remarkParse).use(remarkGfm).parse(body)\n  if (!tokens) {\n    return []\n  }\n\n  const structuredResponse = {}\n  let currentHeading = null\n  for (const token of tokens.children) {\n    const text = await unified()\n      .use(remarkGfm)\n      .use(remarkStringify)\n      .stringify(token)\n    let cleanText = stripFinalNewline(text)\n\n    // remove `\\\\_`\n    if (cleanText.indexOf('\\\\_') > -1) {\n      cleanText = cleanText.replace(/\\\\_/g, '_')\n    }\n\n    // issue forms uses h3 as a heading\n    if (token.type === 'heading') {\n      currentHeading = slugify(token.children[0].value)\n      structuredResponse[currentHeading] = {\n        title: token.children[0].value,\n        heading: token.depth,\n        content: []\n      }\n    } else if (token.type === 'paragraph' && currentHeading) {\n      const obj = structuredResponse[currentHeading]\n\n      const date = parseDate(cleanText)\n      const time = parseTime(cleanText)\n      const duration = parseDuration(cleanText)\n\n      if (date) {\n        obj.date = date\n      }\n\n      if (time) {\n        obj.time = time\n      }\n\n      if (duration) {\n        obj.duration = duration\n      }\n\n      obj.content.push(cleanText)\n    } else if (token.type === 'list') {\n      const obj = structuredResponse[currentHeading]\n      obj.text = cleanText\n      obj.list = parseList(token).flat()\n    } else if (token.type === 'html') {\n      const obj = structuredResponse[currentHeading]\n      obj.content.push(token.html)\n    } else if (token.type === 'code') {\n      const obj = structuredResponse[currentHeading]\n      obj.lang = token.lang\n      obj.text = cleanText\n    } else {\n      if (process.env.DEBUG) {\n        console.log('unhandled token type')\n        console.log(token)\n      }\n    }\n  }\n\n  for (const key in structuredResponse) {\n    const token = structuredResponse[key]\n    const content = token.content.filter(Boolean)\n    if (content && content.length > 0) {\n      if (content.length === 1) {\n        token.text = content[0]\n      }\n      token.text = content.join('\\n\\n')\n    }\n    token.content = content\n  }\n\n  return structuredResponse\n}\n","'use strict'\n\nexport default function parseDuration(text) {\n  let matched = false\n  const duration = {\n    hours: 0,\n    minutes: 0\n  }\n\n  const hoursAndMinutes = new RegExp(/([0-9]+)h([0-9]+)m/)\n  const hours = new RegExp(/([0-9]+)h/)\n\n  if (text.match(hoursAndMinutes)) {\n    matched = true\n    const [, h, m] = text.match(hoursAndMinutes)\n    duration.hours = parseInt(h)\n    duration.minutes = parseInt(m)\n  } else if (text.match(hours)) {\n    matched = true\n    const [, h] = text.match(hours)\n    duration.hours = parseInt(h)\n    duration.minutes = 0\n  }\n\n  if (matched) {\n    return duration\n  } else {\n    return null\n  }\n}\n"],"names":["commonDateFormats","commonTimeFormats","parseList","list","children","map","item","listItem","type","checked","child","text","c","link","url","value","filter","x","join","_settle","pact","state","s","_Pact","o","bind","v","then","observer","prototype","onFulfilled","onRejected","result","this","callback","e","_this","thenable","body","token","cleanText","obj","date","time","duration","key","content","unified","use","remarkParse","remarkGfm","parse","tokens","_temp2","structuredResponse","Boolean","length","currentHeading","_iterator","test","update","stage","shouldContinue","_isSettledPact","reject","_resumeAfterTest","_resumeAfterBody","updateValue","remarkStringify","stringify","match","stripFinalNewline","indexOf","replace","slugify","title","heading","depth","format","isMatch","zonedTimeToUtc","Date","toJSON","split","formatInTimeZone","parseTime","matched","hours","minutes","hoursAndMinutes","RegExp","_text$match","m","parseInt","parseDuration","push","flat","html","lang","process","env","DEBUG","console","log"],"mappings":"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"}