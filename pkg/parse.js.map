{"version":3,"file":"parse.js","sources":["../src/parsers/date.js","../src/parsers/time.js","../src/parsers/index.js","../src/parsers/list.js","../src/parse.js","../src/parsers/duration.js"],"sourcesContent":["'use strict'\n\nimport { parse, isMatch } from 'date-fns'\nimport { zonedTimeToUtc } from 'date-fns-tz/esm'\n\nconst loc = 'UTC'\nconst commonDateFormats = [\n  'yyyy-MM-dd',\n  'dd/MM/yyyy',\n  'dd/MM/yy',\n  'dd-MM-yyyy',\n  'dd-MM-yy',\n  'dd.MM.yyyy',\n  'dd.MM.yy'\n]\n\nexport default function parseDate(text) {\n  const match = commonDateFormats.map((format) => {\n    return isMatch(text, format)\n  })\n  if (match.indexOf(true) > -1) {\n    const date = zonedTimeToUtc(\n      parse(text, commonDateFormats[match.indexOf(true)], new Date()),\n      loc\n    ).toJSON()\n    return date.split('T')[0]\n  } else {\n    return null\n  }\n}\n","'use strict'\n\nimport { parse, isMatch } from 'date-fns'\nimport { zonedTimeToUtc, formatInTimeZone } from 'date-fns-tz/esm'\n\nconst loc = 'UTC'\nconst commonTimeFormats = ['HH:mm', 'HH.mm', 'hh:mm a', 'hh:mm A']\n\nexport default function parseTime(text) {\n  const match = commonTimeFormats.map((format) => {\n    return isMatch(text, format)\n  })\n  if (match.indexOf(true) > -1) {\n    const time = zonedTimeToUtc(\n      parse(text, commonTimeFormats[match.indexOf(true)], new Date()),\n      loc\n    )\n    return formatInTimeZone(time, loc, 'HH:mm')\n  } else {\n    return null\n  }\n}\n","'use strict'\n\nimport date from './date.js'\nimport time from './time.js'\nimport duration from './duration.js'\nimport list from './list.js'\n\nexport const parseDate = date\nexport const parseTime = time\nexport const parseDuration = duration\nexport const parseList = list\n","'use strict'\n\nexport default function parseList(list) {\n  return list.children\n    .map((item) => {\n      const listItem = {}\n      if (item.type === 'list') {\n        return parseList(list)\n      } else if (item.type === 'listItem') {\n        listItem.checked = item.checked\n        return item.children\n          .map((child) => {\n            if (child.type === 'paragraph') {\n              listItem.text = child.children\n                .map((c) => {\n                  if (c.type === 'link') {\n                    listItem.link = c.url\n                    return `[${c.children[0].value}](${c.url})`\n                  } else {\n                    return c.value\n                  }\n                })\n                .filter((x) => !!x)\n                .join('')\n              return listItem\n            }\n          })\n          .filter((x) => !!x)\n      }\n    })\n    .filter((x) => !!x)\n}\n","'use strict'\n\nimport { unified } from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkGfm from 'remark-gfm'\nimport slugify from '@sindresorhus/slugify'\nimport remarkStringify from 'remark-stringify'\nimport stripFinalNewline from 'strip-final-newline'\n\nimport {\n  parseDate,\n  parseTime,\n  parseDuration,\n  parseList\n} from './parsers/index.js'\n\nexport default async function parseMD(body) {\n  const tokens = await unified().use(remarkParse).use(remarkGfm).parse(body)\n  if (!tokens) {\n    return []\n  }\n\n  const structuredResponse = {}\n  let currentHeading = null\n  for (const token of tokens.children) {\n    const text = await unified()\n      .use(remarkGfm)\n      .use(remarkStringify)\n      .stringify(token)\n    let cleanText = stripFinalNewline(text)\n\n    // remove `\\\\_`\n    if (cleanText.indexOf('\\\\_') > -1) {\n      cleanText = cleanText.replace(/\\\\_/g, '_')\n    }\n\n    // issue forms uses h3 as a heading\n    if (token.type === 'heading') {\n      currentHeading = slugify(token.children[0].value)\n      structuredResponse[currentHeading] = {\n        title: token.children[0].value,\n        heading: token.depth,\n        content: []\n      }\n    } else if (token.type === 'paragraph' && currentHeading) {\n      const obj = structuredResponse[currentHeading]\n\n      const date = parseDate(cleanText)\n      const time = parseTime(cleanText)\n      const duration = parseDuration(cleanText)\n\n      if (date) {\n        obj.date = date\n      }\n\n      if (time) {\n        obj.time = time\n      }\n\n      if (duration) {\n        obj.duration = duration\n      }\n\n      obj.content.push(cleanText)\n    } else if (token.type === 'list') {\n      const obj = structuredResponse[currentHeading]\n      obj.text = cleanText\n      obj.list = parseList(token).flat()\n    } else if (token.type === 'html') {\n      const obj = structuredResponse[currentHeading]\n      obj.content.push(token.html)\n    } else if (token.type === 'code') {\n      const obj = structuredResponse[currentHeading]\n      obj.lang = token.lang\n      obj.text = cleanText\n    } else {\n      if (process.env.DEBUG) {\n        console.log('unhandled token type')\n        console.log(token)\n      }\n    }\n  }\n\n  for (const key in structuredResponse) {\n    const token = structuredResponse[key]\n    const content = token.content.filter(Boolean)\n    if (content && content.length > 0) {\n      if (content.length === 1) {\n        token.text = content[0]\n      }\n      token.text = content.join('\\n\\n')\n    }\n    token.content = content\n  }\n\n  return structuredResponse\n}\n","'use strict'\n\nexport default function parseDuration(text) {\n  let matched = false\n  const duration = {\n    hours: 0,\n    minutes: 0\n  }\n\n  const hoursAndMinutes = new RegExp(/([0-9]+)h([0-9]+)m/)\n  const hours = new RegExp(/([0-9]+)h/)\n\n  if (text.match(hoursAndMinutes)) {\n    matched = true\n    const [, h, m] = text.match(hoursAndMinutes)\n    duration.hours = parseInt(h)\n    duration.minutes = parseInt(m)\n  } else if (text.match(hours)) {\n    matched = true\n    const [, h] = text.match(hours)\n    duration.hours = parseInt(h)\n    duration.minutes = 0\n  }\n\n  if (matched) {\n    return duration\n  } else {\n    return null\n  }\n}\n"],"names":["commonDateFormats","commonTimeFormats","parseList","list","children","map","item","listItem","type","checked","child","text","c","link","url","value","filter","x","join","_settle","pact","state","s","_Pact","o","bind","v","then","observer","parseMD","body","token","cleanText","obj","date","time","duration","key","content","unified","use","remarkParse","remarkGfm","parse","tokens","_temp2","structuredResponse","Boolean","length","currentHeading","_iterator","test","update","stage","shouldContinue","_isSettledPact","result","reject","_resumeAfterTest","_resumeAfterBody","updateValue","remarkStringify","stringify","match","stripFinalNewline","indexOf","replace","slugify","title","heading","depth","format","isMatch","zonedTimeToUtc","Date","toJSON","split","parseTime","formatInTimeZone","matched","hours","minutes","hoursAndMinutes","RegExp","_text$match","m","parseInt","parseDuration","push","flat","html","lang","process","env","DEBUG","console","log","prototype","onFulfilled","onRejected","this","callback","e","_this","thenable"],"mappings":"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"}